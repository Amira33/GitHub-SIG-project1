
package FramePackage;


import TableModel.SalesInvoiceHeader;
import TableModel.InvoiceHeaderTable;
import TableModel.InvoiceItemsTable;
import Control.InvoicesButtonControl;
import Control.ItemsButtonControl;
import Control.MenuControl;
import Control.SalesListener;
import Display.HeaderDisplay;
import Display.ItemDisplay;
import java.util.List;
import java.util.ArrayList;

import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JTable;
import javax.swing.JTextField;

/**
 *
 * @author iAmira
 */

//declaration of the class sales invoice frame extends j frame
public class SalesInvoiceFrame extends javax.swing.JFrame {

    /*
     * 
     * Creates new form SalesInvoiceFrame
     */
    public SalesInvoiceFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        SalesInvoiceTable = new javax.swing.JTable();
        SalesInvoiceTable.getSelectionModel().addListSelectionListener(listener);
        CreateInvoiceButton = new javax.swing.JButton();
        CreateInvoiceButton.addActionListener(invoicesControl);
        DeleteButton = new javax.swing.JButton();
        DeleteButton.addActionListener(invoicesControl);
        InvoiceNum = new javax.swing.JLabel();
        InvoiceDate = new javax.swing.JLabel();
        CustomerName = new javax.swing.JLabel();
        InvoiceTotal = new javax.swing.JLabel();
        InvoiceDateTextfield = new javax.swing.JTextField();
        CustomerNameTextfield = new javax.swing.JTextField();
        InvoiceNumberLabel = new javax.swing.JLabel();
        InvoiceTotalLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        InvoiceItemTable = new javax.swing.JTable();
        SaveButton = new javax.swing.JButton();
        SaveButton.addActionListener(itemsControl);
        CancelButton = new javax.swing.JButton();
        CancelButton.addActionListener(itemsControl);
        FileMenuBar = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        LoadMenuItem = new javax.swing.JMenuItem();
        LoadMenuItem.addActionListener(menuControl);
        SaveMenuItem = new javax.swing.JMenuItem();
        SaveMenuItem.addActionListener(menuControl);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportBorder(javax.swing.BorderFactory.createTitledBorder(""));

        SalesInvoiceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "      Invoice No.", "      InvoiceDate", "      CustomerName", "      InvoiceTotal"
            }
        ));
        SalesInvoiceTable.setToolTipText("");
        SalesInvoiceTable.setCellSelectionEnabled(true);
        SalesInvoiceTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        SalesInvoiceTable.setGridColor(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(SalesInvoiceTable);
        SalesInvoiceTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        CreateInvoiceButton.setText("Create New Invoice ");
        CreateInvoiceButton.setActionCommand("CreatenewInvoice ");
        CreateInvoiceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateInvoiceButtonActionPerformed(evt);
            }
        });

        DeleteButton.setText("Delete Invoice");
        DeleteButton.setActionCommand("DeleteInvoice");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        InvoiceNum.setText("Invoice Number");

        InvoiceDate.setText("Invoice Date");

        CustomerName.setText("Customer Name");

        InvoiceTotal.setText("Invoice Total");

        InvoiceItemTable.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        InvoiceItemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "  NO.", "  Item Name", "  Item Price", "  Item Count", "  Item Total"
            }
        ));
        InvoiceItemTable.setGridColor(new java.awt.Color(0, 0, 0));
        jScrollPane2.setViewportView(InvoiceItemTable);

        SaveButton.setText("Save New Item");
        SaveButton.setActionCommand("Saveitem");

        CancelButton.setText("Cancel Item");
        CancelButton.setActionCommand("Cancelitem");

        jMenu1.setText("File");
        jMenu1.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                jMenu1MenuSelected(evt);
            }
        });

        LoadMenuItem.setText("Load File");
        LoadMenuItem.setActionCommand("LoadFile");
        LoadMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(LoadMenuItem);

        SaveMenuItem.setText("Save File");
        SaveMenuItem.setActionCommand("SaveFile");
        SaveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(SaveMenuItem);

        FileMenuBar.add(jMenu1);

        setJMenuBar(FileMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(CreateInvoiceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(DeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(SaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CustomerName)
                            .addComponent(InvoiceDate)
                            .addComponent(InvoiceNum)
                            .addComponent(InvoiceTotal))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(InvoiceDateTextfield)
                                    .addComponent(CustomerNameTextfield)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(InvoiceTotalLabel)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(InvoiceNumberLabel)
                                .addGap(0, 0, Short.MAX_VALUE))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(InvoiceNum))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(InvoiceNumberLabel)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(InvoiceDateTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(InvoiceDate))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CustomerNameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CustomerName))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(InvoiceTotal)
                            .addComponent(InvoiceTotalLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CancelButton)
                    .addComponent(SaveButton)
                    .addComponent(DeleteButton)
                    .addComponent(CreateInvoiceButton))
                .addGap(52, 52, 52))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CreateInvoiceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateInvoiceButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CreateInvoiceButtonActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void jMenu1MenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_jMenu1MenuSelected
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu1MenuSelected

    private void LoadMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LoadMenuItemActionPerformed

    private void SaveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SaveMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SalesInvoiceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SalesInvoiceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SalesInvoiceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SalesInvoiceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new SalesInvoiceFrame().setVisible(true);
        });
    }

    public JMenu getjMenu1() {
        return jMenu1;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelButton;
    private javax.swing.JButton CreateInvoiceButton;
    private javax.swing.JLabel CustomerName;
    private javax.swing.JTextField CustomerNameTextfield;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JMenuBar FileMenuBar;
    private javax.swing.JLabel InvoiceDate;
    private javax.swing.JTextField InvoiceDateTextfield;
    private javax.swing.JTable InvoiceItemTable;
    private javax.swing.JLabel InvoiceNum;
    private javax.swing.JLabel InvoiceNumberLabel;
    private javax.swing.JLabel InvoiceTotal;
    private javax.swing.JLabel InvoiceTotalLabel;
    private javax.swing.JMenuItem LoadMenuItem;
    private javax.swing.JTable SalesInvoiceTable;
    private javax.swing.JButton SaveButton;
    private javax.swing.JMenuItem SaveMenuItem;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

   
    //declaration of the classes
    
    // 1- declaration of the class sales invoice header as array list 
    private  List<SalesInvoiceHeader> SalesInvoicesMenu = new ArrayList<>();
    
    // 2- declaration of the Table Model
    private InvoiceHeaderTable HeaderTable;   //declaration a new object of invoice header table called header table 
    private InvoiceItemsTable ItemsTable;    // declaration of a new object of invoice items table called items table 
   
    // 3- declaration of the Display
    private HeaderDisplay headerDisplay;   // declaration of the class header display 
    private ItemDisplay itemDisplay;      //declaration of the class item display 

   // 4- declaration of the control 
    private SalesListener listener = new SalesListener(this); //declaration of the class sales listener and add action listener in post creation in the design 
    private MenuControl menuControl = new MenuControl(this); // declaration of the class menu control an add action listener in post creation in the desgin
    private InvoicesButtonControl invoicesControl = new InvoicesButtonControl(this);  //declaration of the class invoices button control and add it's action listener
    private ItemsButtonControl itemsControl = new ItemsButtonControl (this);         // declaration of the class items button control and add it's action listener
    
    
    

    // make getter and setter of the component of the sales invoice frame 
   
    public void setInvoiceItemTable(JTable InvoiceItemTable)   // for set table invoice item 
    {
        this.InvoiceItemTable = InvoiceItemTable;
    }

    public SalesListener getListener()    // for get listener 
    {
        return listener;
    }

    public void setInvoiceTotal(JLabel InvoiceTotal)  
    {
        this.InvoiceTotal = InvoiceTotal;
    }

    public void setInvoiceTotalLabel(JLabel InvoiceTotalLabel)
    {
        this.InvoiceTotalLabel = InvoiceTotalLabel;
    }
    
    public void setItemsTable(InvoiceItemsTable ItemsTable)   // for set items table 
    {
        this.ItemsTable = ItemsTable;
    }

    public void setHeaderTable(InvoiceHeaderTable HeaderTable)   // for set header table
    {
        this.HeaderTable = HeaderTable;
    }

    public void setHeaderDisplay(HeaderDisplay headerDisplay)   // for set header display 
    {
        this.headerDisplay = headerDisplay;
    }

    public void setItemDisplay(ItemDisplay itemDisplay)   // for set item display 
    {
        this.itemDisplay = itemDisplay;
    }

    public JButton getCancelButton()     // for get cancel button
    {
        return CancelButton;
    }

    public JButton getCreateInvoiceButton()  // for get create invoice button 
    {
        return CreateInvoiceButton;
    }

    public JLabel getCustomerName()   // for get label customer name 
    {
        return CustomerName;
    }

    public JTextField getCustomerNameTextfield()  // for get text field customer name 
    {
        return CustomerNameTextfield;
    }

    public JButton getDeleteButton()   // for get delete button
    {
        return DeleteButton;
    }

    public JMenuBar getFileMenuBar()   //for get file menu bar 
    {
        return FileMenuBar;
    }

    public JLabel getInvoiceDate()   // for get label invoice date 
    {
        return InvoiceDate;
    }

    public JTextField getInvoiceDateTextfield()   // for get text field of invoice date text field
    {
        return InvoiceDateTextfield;
    }

    public JTable getInvoiceItemTable() 
    {
        return InvoiceItemTable;
    }

    public JLabel getInvoiceNum()   // for get label invoice num
    {
        return InvoiceNum;
    }

    public JLabel getInvoiceNumberLabel()   // for get label of invoice number label 
    {
        return InvoiceNumberLabel;
    }

    public JLabel getInvoiceTotal()    // for get invoice total
    {
        return InvoiceTotal;
    }

    public JLabel getInvoiceTotalLabel()    // for get label of invoice total label
    {
        return InvoiceTotalLabel;
    }

    public JMenuItem getLoadMenuItem() 
    {
        return LoadMenuItem;
    }

    public JTable getSalesInvoiceTable()     // for get table of sales invoice table 
    {
        return SalesInvoiceTable;
    }

    public JButton getSaveButton()      // for get save button
    {
        return SaveButton;
    }

    public MenuControl getMenuControl()    //for get menu control
    {
        return menuControl;
    }

    public JMenuItem getSaveMenuItem() 
    {
        return SaveMenuItem;
    }

    public List<SalesInvoiceHeader> getSalesInvoicesMenu()  // get sales invoices menu as a list of class sales invoice header
    {
        return SalesInvoicesMenu;
    }

    public InvoiceHeaderTable getHeaderTable()    // for get header table from class invoice header table 
    {
        return HeaderTable;
    }

    public InvoiceItemsTable getItemsTable()   // for get items table from the class invoice items table 
    {
        return ItemsTable;
    }

    public HeaderDisplay getHeaderDisplay()             // for get header display
    {
        return headerDisplay;
    }

    public InvoicesButtonControl getInvoicesControl()  //for get invoices control
    {
        return invoicesControl;
    }

    public ItemsButtonControl getItemsControl() //for gret items control
    {
        return itemsControl;
    }

    public ItemDisplay getItemDisplay()     // for get item display 
    {
        return itemDisplay;
    }

   

   

}



